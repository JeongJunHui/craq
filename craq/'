<template>
    <div class="wrapper width-100%">
        <Modal :show="showModal" :body="'adjfsjflasdjkfl sdjfklasdf lasdjf klasdf jklas dfjklasd fklasdf jakl'" :btntext="'closesese'" @clicked="closeModal"/>
        <form class="login-form">
            <div class="text-component text-center margin-bottom-md">
                <div>
                <h1 v-if="progress==0">Sign In</h1>
                <h1 v-if="progress == 1 || progress == 2 || progress== 3">SignUp</h1>
                </div>
                <div v-if="progress">
                    <Steps :progress="progress"/>
                </div>
                <div v-else>
                    <p>Hello, SSAFY WORLD!</p>
                </div>

            </div>
            <div v-if="progress == 2" class="text-center">
                <h2>Verification in progress</h2>
                <Spinner/>
            </div>
            <div v-if="progress == 3">
                <h2>congrats... placeholder</h2>
                <h2>Username </h2>
            </div>



            <div v-if="progress == 1" class="margin-bottom-sm">
                <label class="form-label margin-bottom-xxxs" for="inputUsername">Username</label>
                <input class="form-control width-100%" type="text" v-model="inputUsername" name="inputUsername" id="inputUsername" placeholder="Username">
            </div>
            <div v-if="progress == 0 || progress == 1" class="margin-bottom-sm">
                <label class="form-label margin-bottom-xxxs" for="inputEmail1">Email</label>
                <input class="form-control width-100%" type="email" v-model="inputEmail" name="inputEmail" id="inputEmail" placeholder="SSAFY Email">
            </div>

            <div v-if="progress == 0 || progress == 1" class="margin-bottom-sm">
                <div class="flex justify-between margin-bottom-xxxs">
                    <label class="form-label" for="inputPassword1">Password</label>
                    <span v-if="progress == 0" class="text-sm"><a href="#0">Forgot?</a></span>
                </div>

                <input class="form-control width-100%" type="password" v-model="inputPassword1" name="inputPassword1" id="inputPassword1">
            </div>

            <div v-if="progress == 1" class="margin-bottom-sm">
                <div class="flex justify-between margin-bottom-xxxs">
                    <label class="form-label" for="inputPassword2">Password Verification</label>
                </div>

                <input class="form-control width-100%" type="password" v-model="inputPassword2" name="inputPassword2" id="inputPassword2">
            </div>

            <div v-if="progress != 2" class="margin-bottom-sm">
                <div class="btn btn--primary btn--md width-100%" @click.prevent="primeButton">
                    {{progress == 0 ? 'Login' : '' }}
                    {{progress == 1 ? 'Verify' : '' }}
                    {{progress == 2 ? 'next2' : '' }}
                    {{progress == 3 ? 'confirm' : ''}}
                    {{progress == 4 ? 'check' : ''}}
                </div>
            </div>
        </form>
        <div v-if="progress==0" class="text-center">
            <p class="text-sm" style="cursor: pointer;" @click="getStarted">Don't have an account? Get started</p>
        </div>
    </div>

</template>

<script>
import Steps from '@/components/SignForm/Steps.vue';
import Modal from '@/components/Modal.vue';
import Spinner from '@/components/Spinner.vue';

export default {
    name: "SignForm",
    components: {
        Steps, Modal, Spinner
    },
    data() {
        return {
            "progress": 0,
            "inputUsername": "",
            "inputEmail": "",    
            "inputPassword1": "",
            "inputPassword2": "",
            showModal: false,
            username: false,
            email: false,
            password: false,
            errors: [],
        }
    },
    methods: {
        closeModal() {
            console.log('clicked');
            this.showModal = false;
        },
        signUp() {
            this.errors = [];
            if (username)

        },
        login() {

        },
        verify() {
            this.progress = 2 
            setTimeout(()=> {
            // verify
            if (true) {
                this.progress = 3;
            } else {
                //error message
                this.progress = 1;
            }

            }, 3000);
        },
        confirm() {
            this.inputUsername = "";
            this.Email= "";
            this.inputPassword1= "";
            this.inputPssword2= "";
            this.progress = 0;
        },
        getStarted() {
            this.progress = 1;
        },
        primeButton() {
            if (this.progress == 0) {
                this.login()
            }
            else if (this.progress == 1) {
                this.verify();

            } else if (this.progress == 2) {
                return;

            } else if (this.progress == 3) {
                this.confirm();

            } else if (this.progress == 4) {
                // change password
                 

            } else {
                //error //TODO
            }
            return 'hi';
        }

    }

}

</script>


<style lang="scss" scoped>
.wrapper {
    background-color: var(--color-surface);
    width: 100%;
    height: 100%;
    padding: var(--space-xl) var(--space-lg);
    border-radius: var(--radius-sm);
    color: var(--color-on-surface);
}
@-webkit-keyframes pulse {
    from {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
    }

    50% {
        -webkit-transform: scale3d(1.05, 1.05, 1.05);
        transform: scale3d(1.05, 1.05, 1.05);
    }

    to {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
    }
}

@keyframes pulse {
    from {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
    }

    50% {
        -webkit-transform: scale3d(1.05, 1.05, 1.05);
        transform: scale3d(1.05, 1.05, 1.05);
    }

    to {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
    }
}

.pulse {
    -webkit-animation-name: pulse;
    animation-name: pulse;
    animation-duration: 2s;
    animation-iteration-count: infinite;
}

.noShow {
    display: none;
}

</style>
